{"version":3,"sources":["components/icons/check-icon-unchecked.svg","components/icons/check-icon-checked.svg","components/icons/delete-icon.svg","components/FilterMenu.jsx","components/AddNotesForm.jsx","components/Note.jsx","components/Notescontainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FilterMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFilter","bind","assertThisInitialized","state","active","e","setState","handlefilter","_this2","react_default","a","createElement","all","className","style","fontWeight","onClick","completed","todo","Component","AddNotesForm","_Component","handleAddNote","handleOnChange","input","error","inherits","createClass","key","value","handleaddnote","target","notes","length","filter","note","done","onSubmit","preventDefault","type","placeholder","id","onChange","components_FilterMenu","Note","handleDone","handleDelete","handledone","handledelete","src","DeleteIcon","alt","body","opacity","CheckIconChecked","CheckIconUnchecked","Notescontainer","filteredNotes","filternotes","map","components_Note","applyfilter","App","notesFilter","localStorage","getItem","greatNotes","JSON","parse","notesClone","stringify","newNote","uuid","push","setItem","foundNote","findIndex","element","console","log","arrayWithoutNote","components_AddNotesForm","components_Notescontainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9236bc12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon-unchecked.8bd2814a.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-icon-checked.c60e1d2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-icon.16ee259e.svg\";","import React, { Component } from 'react';\n\nclass FilterMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.handleFilter = this.handleFilter.bind(this);\n        this.state = {\n            active: ''\n        };\n    }\n    handleFilter(e) {\n        this.setState({ active: e });\n        return this.props.handlefilter(e);\n    }\n    render() {\n        return (\n            <nav>\n                {this.props.all > 0 && (\n                    <ul>\n                        <li\n                            className=\"link\"\n                            style={\n                                this.state.active === 'all'\n                                    ? { fontWeight: 700 }\n                                    : null\n                            }\n                            onClick={() => {\n                                return this.handleFilter('all');\n                            }}>\n                            all({this.props.all})\n                        </li>\n                        <li> | </li>\n                        <li\n                            className=\"link\"\n                            style={\n                                this.state.active === 'completed'\n                                    ? { fontWeight: 700 }\n                                    : null\n                            }\n                            onClick={() => {\n                                return this.handleFilter('completed');\n                            }}>\n                            completed({this.props.completed})\n                        </li>\n                        <li> | </li>\n                        <li\n                            className=\"link\"\n                            style={\n                                this.state.active === 'todo'\n                                    ? { fontWeight: 700 }\n                                    : null\n                            }\n                            onClick={() => {\n                                return this.handleFilter('todo');\n                            }}>\n                            to do({this.props.todo})\n                        </li>\n                    </ul>\n                )}\n            </nav>\n        );\n    }\n}\n\nexport default FilterMenu;\n","import React, { Component } from 'react';\nimport FilterMenu from './FilterMenu';\n\nexport class AddNotesForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleAddNote = this.handleAddNote.bind(this);\n        this.handleOnChange = this.handleOnChange.bind(this);\n\n        this.state = {\n            input: '',\n            error: false\n        };\n    }\n    handleAddNote() {\n        if (this.state.input !== '') {\n            return this.props.handleaddnote(this.state.input);\n        } else {\n            this.setState({ error: true });\n        }\n    }\n    handleOnChange(e) {\n        this.setState({ input: e.target.value });\n    }\n    render() {\n        let all = this.props.notes.length;\n        let completed = this.props.notes.filter(note => note.done === true);\n        let todo = all - completed.length;\n\n        return (\n            <div className=\"add-note-frame\">\n                {this.state.error && (\n                    <div className=\"modal\">\n                        <div className=\"modal-window\">\n                            <h3>The note cannot be empty!</h3>\n                            <button\n                                className=\"btn-big\"\n                                onClick={() => {\n                                    this.setState({ error: false });\n                                }}>\n                                OK\n                            </button>\n                        </div>\n                    </div>\n                )}\n                <form\n                    onSubmit={e => {\n                        e.preventDefault();\n                        this.setState({ input: '' });\n                        return this.handleAddNote;\n                    }}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"add a note...\"\n                        id=\"newNote\"\n                        onChange={this.handleOnChange}\n                        value={this.state.input}\n                    />\n                    <button\n                        className=\"add-btn\"\n                        type=\"submit\"\n                        onClick={this.handleAddNote}>\n                        +\n                    </button>\n                </form>\n                <FilterMenu\n                    handlefilter={this.props.handlefilter}\n                    all={all}\n                    completed={completed.length}\n                    todo={todo}\n                />\n            </div>\n        );\n    }\n}\n\nexport default AddNotesForm;\n","import React, { Component } from 'react';\n\nimport CheckIconUnchecked from './icons/check-icon-unchecked.svg';\nimport CheckIconChecked from './icons/check-icon-checked.svg';\n\nimport DeleteIcon from './icons/delete-icon.svg';\n\nclass Note extends Component {\n    constructor(props) {\n        super(props);\n        this.handleDone = this.handleDone.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n    handleDone() {\n        return this.props.handledone(this.props.id);\n    }\n    handleDelete() {\n        return this.props.handledelete(this.props.id);\n    }\n    render() {\n        return (\n            <div className=\"note-container\">\n                <div className=\"btn\" onClick={this.handleDelete}>\n                    <img src={DeleteIcon} alt=\"\" />\n                </div>\n                <div className={this.props.done ? 'note done' : 'note'}>\n                    {this.props.body}\n                </div>\n                <div className=\"note-controls\">\n                    <div\n                        className=\"btn\"\n                        onClick={this.handleDone}\n                        style={this.props.done ? { opacity: '1' } : null}>\n                        {this.props.done ? (\n                            <img src={CheckIconChecked} alt=\"\" />\n                        ) : (\n                            <img src={CheckIconUnchecked} alt=\"\" />\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Note;\n","import React, { Component } from 'react';\n\nimport Note from './Note';\n\nclass Notescontainer extends Component {\n    componentDidMount() {\n        this.setState({ notes: this.props.notes });\n    }\n\n    render() {\n        let filteredNotes = this.props.notes;\n        switch (this.props.filternotes) {\n            case 'completed':\n                filteredNotes = this.props.notes.filter(\n                    note => note.done === true\n                );\n                break;\n            case 'todo':\n                filteredNotes = this.props.notes.filter(\n                    note => note.done === false\n                );\n                break;\n            default:\n                filteredNotes = this.props.notes;\n                break;\n        }\n        return (\n            <div className=\"notes-frame\">\n                {filteredNotes.map(note => {\n                    return (\n                        <Note\n                            handledone={this.props.handledone}\n                            handledelete={this.props.handledelete}\n                            key={note.id}\n                            id={note.id}\n                            body={note.body}\n                            done={note.done}\n                            applyfilter={this.props.filternotes}\n                        />\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Notescontainer;\n","import React, { Component } from 'react';\nimport AddNotesForm from './components/AddNotesForm';\nimport Notescontainer from './components/Notescontainer';\nimport uuid from 'uuid';\nimport './style/App.css';\n\nexport class App extends Component {\n    constructor() {\n        super();\n        this.handleDone = this.handleDone.bind(this);\n        this.handleAddNote = this.handleAddNote.bind(this);\n        this.handleFilter = this.handleFilter.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.state = {\n            notes: [],\n            notesFilter: 'all'\n        };\n    }\n    componentDidMount() {\n        if (localStorage.getItem('greatNotes') !== null) {\n            let greatNotes = JSON.parse(localStorage.getItem('greatNotes'));\n            this.setState({ notes: greatNotes });\n        }\n    }\n    handleAddNote(e) {\n        // avoid mutations\n        const notesClone = JSON.parse(JSON.stringify(this.state.notes));\n        const newNote = { id: uuid(), body: e, done: false };\n        notesClone.push(newNote);\n        localStorage.setItem('greatNotes', JSON.stringify(notesClone));\n        this.setState({ notes: notesClone });\n    }\n    handleDone(e) {\n        // avoid mutating state by cloning the state\n        const notesClone = JSON.parse(JSON.stringify(this.state.notes));\n        const foundNote = notesClone.findIndex(element => element.id === e);\n        notesClone[foundNote].done = !notesClone[foundNote].done;\n        localStorage.setItem('greatNotes', JSON.stringify(notesClone));\n        this.setState({ notes: notesClone });\n    }\n    handleFilter(e) {\n        console.log(e);\n        switch (e) {\n            case 'all':\n                this.setState({ notesFilter: 'all' });\n                break;\n\n            case 'completed':\n                this.setState({ notesFilter: 'completed' });\n                break;\n\n            case 'todo':\n                this.setState({ notesFilter: 'todo' });\n                break;\n\n            default:\n                console.log('all');\n        }\n    }\n    handleDelete(e) {\n        const notesClone = JSON.parse(JSON.stringify(this.state.notes));\n        const arrayWithoutNote = notesClone.filter(note => note.id !== e);\n        localStorage.setItem('greatNotes', JSON.stringify(arrayWithoutNote));\n        this.setState({ notes: arrayWithoutNote });\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <AddNotesForm\n                    handleaddnote={this.handleAddNote}\n                    handlefilter={this.handleFilter}\n                    notes={this.state.notes}\n                />\n\n                <Notescontainer\n                    handledone={this.handleDone}\n                    handledelete={this.handleDelete}\n                    notes={this.state.notes}\n                    filternotes={this.state.notesFilter}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}